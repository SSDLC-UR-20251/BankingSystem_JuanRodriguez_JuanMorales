name: 'Security Checks: Detect Secrets + Semgrep SAST + SonarQube'

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  detect-secrets:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.x'

      - name: Install detect-secrets
        run: |
          pip install detect-secrets

      - name: Run detect-secrets scan
        id: secrets_scan
        run: |
          detect-secrets scan --all-files > secrets.json

      - name: Upload secrets scan results as artifact
        uses: actions/upload-artifact@v3
        with:
          name: secrets-scan-results
          path: secrets.json

  semgrep-sast:
    runs-on: ubuntu-latest
    needs: detect-secrets  # Este job depende de la ejecución del job detect-secrets
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Semgrep
        uses: returntocorp/semgrep-action@v1
        with:
          config: ".semgrep.yml"  # Si usas un archivo de reglas personalizado

      - name: Run Semgrep SAST scan
        uses: returntocorp/semgrep-action@v1
        env:
          SEMGREP_APP_TOKEN: ${{ secrets.SEMGREP_APP_TOKEN }}  # Asegúrate de que el token esté aquí
        with:
          fail-on: error  # Esto hará que el build falle si Semgrep encuentra errores

  sonarqube:
    name: SonarQube
    runs-on: ubuntu-latest
    needs: semgrep-sast  # Este job depende de la ejecución del job semgrep-sast
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis
      - name: SonarQube Scan
        uses: SonarSource/sonarqube-scan-action@v5
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
